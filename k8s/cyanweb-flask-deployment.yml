apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cyanweb-flask
  name: cyanweb-flask
  namespace: cyanweb-kube
  annotations:
    app.gitlab.com/app: ${CI_PROJECT_PATH_SLUG}
    app.gitlab.com/env: ${CI_ENVIRONMENT_SLUG}
    eks.amazonaws.com/compute-type: fargate
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cyanweb-flask
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: cyanweb-flask
    spec:
      containers:
      - image: registry.epa.gov/qed/cyanweb_kube/cyanweb-api:dev-gl
        imagePullPolicy: Always
        envFrom:
          - configMapRef:
              name: cyanweb-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        readinessProbe:
          # tcpSocket:
          #   port: 5001
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 10
        livenessProbe:
          # tcpSocket:
          #   port: 5001
          initialDelaySeconds: 15
          periodSeconds: 30
          timeoutSeconds: 10
        name: cyanweb-flask
        ports:
        - containerPort: 5001
          protocol: TCP
        volumeMounts:
          - mountPath: /config
            name: cyanweb-config-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
      - name: cyanweb-config-volume
        persistentVolumeClaim:
          claimName: cyanweb-config-pvolume-claim1
